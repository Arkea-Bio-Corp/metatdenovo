/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/
process {
    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: SAMPLESHEET_CHECK {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: CAT_FASTQ {
        publishDir = [
            enabled: false
        ]
    }

    withName: FASTQC {
        ext.args = '--quiet'
        publishDir = [
            enabled: false
        ]
    }

    withName: TRIMGALORE {
        ext.args = [
            /*'--fastqc', gonna keep fastqc in its own module for reasons*/
            '--illumina',
            params.trim_quality > 0 ? "--quality ${params.trim_quality}" : '',
            params.trim_length > 0 ? "--length  ${params.trim_length}" : '',
            params.trim_nextseq > 0 ? "--nextseq ${params.trim_nextseq}" : ''
        ].join(' ').trim()
        publishDir = [
            /*[
                path: { "${params.outdir}/trimgalore/fastqc" },
                mode: 'copy',
                pattern: "*.{html,zip}"
            ],*/
            [
                path: { "${params.outdir}/trimgalore" },
                mode: 'copy',
                pattern: "*.{txt,gz,fq,fastq}"
            ]
        ]
    }

    withName: TRINITY {
        ext.args = [
            params.min_kmer_cov > 1 ? "--min_kmer_cov ${params.min_kmer_cov}" : '--min_kmer_cov 1' ,
            params.normalize_assembly ? "--no_normalize_reads" : '',
            params.min_contig_length > 0 ? "--min_contig_length ${params.min_contig_length}" : ''
        ].join(' ').trim()
        publishDir = [
            path: { "${params.outdir}/trinity"},
            mode: 'copy',
            pattern: '*'
        ]
    }


    withName: SORTMERNA {
        publishDir = [
            [
                path: { "${params.outdir}/sortmerna" },
                mode: 'copy',
                pattern: "*.{gz,fq,fastq}"
            ],
            [
                path: { "${params.outdir}/sortmerna/logs" },
                mode: 'copy',
                pattern: "*.log"
            ]
        ]
    }

    withName: BBMAP_DEDUPE {
        ext.args = "ac=f"
        publishDir = [
            [
                path: { "${params.outdir}/bbmap/dedupe" },
                mode: 'copy',
                pattern: "*.{gz,fq,fastq}"
            ],
            [
                path: { "${params.outdir}/bbmap/dedupe/logs" },
                mode: 'copy',
                pattern: "*.log"
            ]
        ]
    }

    withName: KRAKEN2_KRAKEN2 {
        ext.args = [
            '-use-names',
            '-report-zero-counts',
            params.confidence > 0 ? "-confidence ${params.confidence}" : ''
        ].join(' ').trim()
        publishDir = [
            path: { "${params.outdir}/kraken2" },
            mode: 'copy',
            pattern: "*.{txt,gz,fq,fastq}"
        ]
    }

    withName: CDHIT_CDHIT {
        ext.args = [
            params.percent_seq_id !== 0.9 ? "-c ${params.percent_seq_id}" : '',
            params.word_length !== 10 ? "-n  ${params.word_length}" : ''
        ].join(' ').trim()
        publishDir = [
            path: { "${params.outdir}/cdhit" },
            mode: 'copy',
            pattern: "*.{fa,fasta,clstr}"
        ]
    }

    withName: 'SALMON_INDEX' {
        publishDir = [
            path: { "${params.outdir}/salmon/index" },
            mode: 'copy',
            pattern: "*"
            // pattern: "*/*.{bin,json,log,tsv}"
        ]
    }

    withName: 'SALMON_QUANT' {
        publishDir = [
            [
                path: { "${params.outdir}/salmon/quant/results" },
                mode: params.publish_dir_mode
            ],
            [
                path: { "${params.outdir}/salmon/quant" },
                mode: 'copy',
                pattern: "*info.json"
            ]
        ]
    }

    withName: 'TRANSDECODER_LONGORF' {
        publishDir = [
            path: { "${params.outdir}/transdecoder/longorf" },
            mode: params.publish_dir_mode
        ]
    }

    withName: 'TRANSDECODER_PREDICT' {
        publishDir = [
            path: { "${params.outdir}/transdecoder/predict" },
            mode: 'copy',
            pattern: "*.transdecoder.{pep,cds,gff3,bed}"
        ]
    }



    withName: EGGNOG_DOWNLOAD {
        publishDir = [
            [
                path: { "${params.eggnog_dbpath}" },
                mode: 'copy',
                pattern: "*.db"
            ],
            [
                path: { "${params.eggnog_dbpath}" },
                mode: 'copy',
                pattern: "*.pkl"
            ],
            [
                path: { "${params.eggnog_dbpath}" },
                mode: 'copy',
                pattern: "*.dmnd"
            ]
        ]
    }

    withName: EGGNOG_MAPPER {
        ext.args = [
            params.annot_sens  !== 'sensitive' ? "--sensmode ${params.annot_sens}" : '',
            params.annot_eval  !== 0.001       ? "--evalue ${params.annot_eval}"    : '',
            params.annot_score                 ? "--score ${params.annot_score}"    : ''
        ].join(' ').trim()
        publishDir = [
            [
                path: { "${params.outdir}/eggnog" },
                mode: 'copy',
                pattern: "*.emapper.hits"
            ],
            [
                path: { "${params.outdir}/eggnog" },
                mode: 'copy',
                pattern: "*.emapper.seed_orthologs"
            ],
            [
                path: { "${params.outdir}/eggnog" },
                mode: 'copy',
                pattern: "*.emapper.annotations"
            ]
        ]
    }


    withName: UNPIGZ_CONTIGS {
        publishDir = [
            enabled: false
        ]
    }





    withName: COLLECT_STATS {
        publishDir = [
            path: { "${params.outdir}/summary_tables" },
            mode: 'copy',
            pattern: "*.gz"
        ]
    }

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }

    withName: MULTIQC {
        ext.args = params.multiqc_title ? "--title \"$params.multiqc_title\"" : ''
        publishDir = [
            path: "${params.outdir}/multiqc",
            mode: 'copy',
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
}
