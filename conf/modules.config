/*
========================================================================================
    Config file for defining DSL2 per module options and publishing paths
========================================================================================
    Available keys to override module options:
        ext.args            = Additional arguments appended to command in module.
        ext.args2           = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3           = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix          = File name prefix for output files.
----------------------------------------------------------------------------------------
*/
process {
    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: 'copy',
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: SAMPLESHEET_CHECK {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: 'copy',
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: 'copy',
            pattern: '*_versions.yml'
        ]
    }

    withName: MULTIQC {
        ext.args = params.multiqc_title ? "--title \"$params.multiqc_title\"" : ''
        publishDir = [
            path: "${params.outdir}/multiqc",
            mode: 'copy',
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: FASTQC {
        ext.args = '--quiet'
    }

    withName: TRIMGALORE {
        ext.args = [
            '--fastqc',
            params.trim_nextseq > 0 ? "--nextseq ${params.trim_nextseq}" : ''
        ].join(' ').trim()
        publishDir = [
            [
                path: { "${params.outdir}/trimgalore/fastqc" },
                mode: 'copy',
                pattern: "*.{html,zip}"
            ],
            [
                path: { "${params.outdir}/trimgalore" },
                mode: 'copy',
                pattern: "*.txt"
            ]
        ]
    }

    withName: KHMER_NORMALIZEBYMEDIAN {
        ext.args = [
            params.diginorm_C ? "-C ${params.diginorm_C}" : '',
            params.diginorm_k ? "-k ${params.diginorm_k}" : '',
        ].join(' ').trim()
        publishDir = [
            [
                path: { "${params.outdir}/diginorm" },
                mode: 'copy',
                pattern: "*.fastq.gz"
            ],
            [
                path: { "${params.outdir}/diginorm/logs" },
                mode: 'copy',
                pattern: "*.log"
            ]
        ]
    }

    withName: KHMER_FILTERABUND {
        ext.args = [
            '--variable-coverage',
            params.diginorm_C ? "-C ${params.diginorm_C} -Z ${params.diginorm_C}" : '',
            ].join(' ').trim()
        publishDir = [
            [
                path: { "${params.outdir}/diginorm" },
                mode: 'copy',
                pattern: "*.fastq.gz"
            ],
            [
                path: { "${params.outdir}/diginorm/logs" },
                mode: 'copy',
                pattern: "*.log"
            ]
        ]
    }

    withName: KHMER_EXTRACTPAIREDREADS {
        publishDir = [
            [
                path: { "${params.outdir}/diginorm" },
                mode: 'copy',
                pattern: "*.fastq.gz"
            ],
            [
                path: { "${params.outdir}/diginorm/logs" },
                mode: 'copy',
                pattern: "*.log"
            ]
        ]
    }

    withName: MEGAHIT_INTERLEAVED {
        publishDir = [
            path: { "${params.outdir}/megahit" },
            mode: 'copy',
            pattern: '**/*.{gz,log}'
        ]
    }

    withName: SPADES {
        ext.args = "--rna"
        publishDir = [
            path: { "${params.outdir}/rnaspades" },
            mode: 'copy',
            pattern: '*.{gz,log}'
        ]
    }

    withName: '.*:BBMAP_ALIGN' {
        ext.args = "trimreaddescriptions=t pigz=t"
        publishDir = [
            [
                path: { "${params.outdir}/bbmap" },
                mode: 'copy',
                pattern: "*.bam"
            ],
            [
                path: { "${params.outdir}/bbmap/logs" },
                mode: 'copy',
                pattern: "*.log"
            ]
        ]
    }

    withName: SAMTOOLS_SORT {
        ext.prefix = { "${meta.id}.sorted.bam" }
    }

    withName: PRODIGAL {
        ext.args = params.prodigal_trainingfile ? "-t $params.prodigal_trainingfile" : "-p meta"
        publishDir = [
            path: { "${params.outdir}/prodigal" },
            mode: 'copy',
            pattern: "*"
        ]
    }

    withName: PREDICT {
        publishDir = [
            path: { "${params.outdir}/transdecoder" },
            mode: 'copy',
            pattern: "*"
        ]
    }

    withName: '.*:FEATURECOUNTS_CDS' {
        ext.args = '-g ID -t CDS -F gtf'
        publishDir = [
            path: { "${params.outdir}/featurecounts" },
            mode: 'copy',
            pattern: "*"
        ]
    }

    withName: '.*_CAT' {
        publishDir = [
            path: { "${params.outdir}/prokka" },
            mode: 'copy',
            pattern: "*.{faa,gff,fna}"
        ]
    }

    withName: 'HMMER_HMMSEARCH' {
        publishDir = [
            path: { "${params.outdir}/hmmsearch" },
            mode: 'copy',
            pattern: "*.tblout"
        ]
    }

    withName: 'HMMRANK' {
        publishDir = [
            path: { "${params.outdir}/summary_tables" },
            mode: 'copy',
            pattern: "*.out"
        ]
    }

    withName: EGGNOG_DOWNLOAD {
        publishDir = [
            [
                path: { "${params.eggnog_dbpath}" },
                mode: 'copy',
                pattern: "*.db"
            ],
            [
                path: { "${params.eggnog_dbpath}" },
                mode: 'copy',
                pattern: "*.pkl"
            ],
            [
                path: { "${params.eggnog_dbpath}" },
                mode: 'copy',
                pattern: "*.dmnd"
            ]
        ]
    }

    withName: EGGNOG_MAPPER {
        publishDir = [
            [
                path: { "${params.outdir}/eggnog" },
                mode: 'copy',
                pattern: "*.emapper.hits"
            ],
            [
                path: { "${params.outdir}/eggnog" },
                mode: 'copy',
                pattern: "*.emapper.seed_orthologs"
            ],
            [
                path: { "${params.outdir}/eggnog" },
                mode: 'copy',
                pattern: "*.emapper.annotations"
            ]
        ]
    }

    withName: EUKULELE_DB {
        ext.args = [ params.eukulele_db ? "--database ${params.eukulele_db}" : ''].join(' ').trim()
        publishDir = [
            path: { "${params.eukulele_dbpath}/" },
            mode: 'copy',
            pattern: "*"
        ]
    }

    withName: EUKULELE {
        publishDir = [
            path: { "${params.outdir}/eukulele" },
            mode: 'copy'
        ]
        memory = 16.GB
        ext.args = [
            params.orf_caller == 'transdecoder' ? "--protein_extension .pep" : '',
            params.eukulele_db ? "--database ${params.eukulele_db}" : '',
            params.eukulele_method ? "-m ${params.eukulele_method}" : ''
        ].join(' ').trim()
    }

    withName: FORMAT_TAX {
        publishDir = [
            path: { "${params.outdir}/summary_tables" },
            mode: 'copy',
            pattern: '*.tsv'
        ]
    }

    withName: COLLECT_FEATURECOUNTS {
        publishDir = [
            path: { "${params.outdir}/summary_tables" },
            mode: 'copy'
        ]
    }

    withName: COLLECT_FEATURECOUNTS_EUK {
        publishDir = [
            path: { "${params.outdir}/summary_tables" },
            mode: 'copy'
        ]
    }

    withName: COLLECT_STATS {
        publishDir = [
            path: { "${params.outdir}/summary_tables" },
            mode: 'copy'
        ]
    }
    withName: COLLECT_STATS_NOTRIM {
        publishDir = [
            path: { "${params.outdir}/summary_tables" },
            mode: 'copy'
        ]
    }
}
