/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/
process {
    // publishDir = [
    //     path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
    //     mode: params.publish_dir_mode,
    //     saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    // ]

    withName: SAMPLESHEET_CHECK {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: FASTQC {
        // ext.args = '--quiet'
        // publishDir = [
        //     enabled: false
        // ]
        publishDir = [
            path: { "${params.outdir}/${meta.id}/fastqc"},
            mode: 'copy',
            pattern: '*'
        ]
    }

    withName: TRIMGALORE {
        ext.args = [
            /*'--fastqc', gonna keep fastqc in its own module for reasons*/
            '--illumina',
            params.trim_quality > 0 ? "--quality ${params.trim_quality}" : '',
            params.trim_length > 0 ? "--length  ${params.trim_length}" : '',
            params.trim_nextseq ? "--nextseq ${params.trim_nextseq}" : '',
            params.trim_n ? "--trim-n" : ''
        ].join(' ').trim()
        publishDir = [
            [
                path: { "${params.outdir}/${meta.id}/trimgalore" },
                mode: 'copy',
                pattern: "*.{txt,gz,fq,fastq}"
            ]
        ]
    }

    withName: TRIMMOMATIC {
        publishDir = [
            [
                path: { "${params.outdir}/${meta.id}/trimmomatic" },
                mode: 'copy',
                pattern: "*"
            ]
        ]
        ext.args = params.trimmo ?: 'ILLUMINACLIP:TruSeq3-PE.fa:2:30:10 SLIDINGWINDOW:4:20 MINLEN:50'
    }

    withName: BOWTIE2_ALIGN {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/bowtie_align" },
            mode: 'copy',
            pattern: "*"
        ]
    }

    withName: CAT_FASTQ {
                publishDir = [
            path: { "${params.outdir}/${meta.id}/cat_fastq" },
            mode: 'copy',
            pattern: "*"
        ]
    }

    withName: HMMER_HMMSCAN {
                publishDir = [
            path: { "${params.outdir}/${meta.id}/hmmscan" },
            mode: 'copy',
            pattern: "*"
        ]
    }

    withName: MEGAHIT {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/megahit"},
            mode: 'copy',
            pattern: '*/*'
        ]
    }
    
    withName: SOAP_DENOVO_TRANS {
        ext.args = [
            params.soapdn_len != 100 ? "-L ${params.soapdn_len}" : ""
        ].join(' ').trim()
        publishDir = [
            path: { "${params.outdir}/${meta.id}/soap_denovo_trans"},
            mode: 'copy',
            pattern: '*'
        ]
    }

    withName: TRANS_ABYSS {
        ext.args = [
            params.tabyss_len != 100 ? "--length ${params.tabyss_len}" : ""
        ].join(' ').trim()
        publishDir = [
            path: { "${params.outdir}/${meta.id}/trans_abyss"},
            mode: 'copy',
            pattern: '*'
        ]
    }

    withName: TRINITY {
        ext.args = [
            params.min_kmer_cov > 1 ? "--min_kmer_cov ${params.min_kmer_cov}" : '--min_kmer_cov 1' ,
            params.normalize_assembly ? "--no_normalize_reads" : '',
            params.min_contig_length > 0 ? "--min_contig_length ${params.min_contig_length}" : '',
            params.trinity_salmon ? "" : "--no_salmon"
        ].join(' ').trim()
        publishDir = [
            path: { "${params.outdir}/${meta.id}/trinity"},
            mode: 'copy',
            pattern: '*'
        ]
    }


    withName: SORTMERNA {
        publishDir = [
            [
                path: { "${params.outdir}/${meta.id}/sortmerna" },
                mode: 'copy',
                pattern: "*.{gz,fq,fastq}"
            ],
            [
                path: { "${params.outdir}/${meta.id}/sortmerna/logs" },
                mode: 'copy',
                pattern: "*.log"
            ]
        ]
    }

    withName: BBMAP_DEDUPE {
        ext.args = "ac=f"
        publishDir = [
            [
                path: { "${params.outdir}/${meta.id}/bbmap/dedupe" },
                mode: 'copy',
                pattern: "*.{gz,fq,fastq}"
            ],
            [
                path: { "${params.outdir}/${meta.id}/bbmap/logs" },
                mode: 'copy',
                pattern: "*.log"
            ]
        ]
    }

    withName: BBMAP_REPAIR {
        publishDir = [
            [
                path: { "${params.outdir}/${meta.id}/bbmap/repair" },
                mode: 'copy',
                pattern: "*.{gz,fq,fastq}"
            ],
            [
                path: { "${params.outdir}/${meta.id}/bbmap/logs" },
                mode: 'copy',
                pattern: "*.log"
            ]
        ]
    }

    withName: BBMAP_REFORMAT {
        publishDir = [
            [
                path: { "${params.outdir}/${meta.id}/bbmap/reformat" },
                mode: 'copy',
                pattern: "*.{gz,fq,fastq}"
            ],
            [
                path: { "${params.outdir}/${meta.id}/bbmap/logs" },
                mode: 'copy',
                pattern: "*.log"
            ]
        ]
    }

    withName: BBMAP_MERGE {
        publishDir = [
            [
                path: { "${params.outdir}/${meta.id}/bbmap/merge" },
                mode: 'copy',
                pattern: "*.{gz,fq,fastq}"
            ],
            [
                path: { "${params.outdir}/${meta.id}/bbmap/logs" },
                mode: 'copy',
                pattern: "*.{log,txt}"
            ]
        ]
    }

    withName: KRKN_ARCH {
        ext.args = [
            params.use_names ? '-use-names' : '',
            params.report_zero_counts ? '-report-zero-counts' : '',
            params.confidence > 0 ? "-confidence ${params.confidence}" : ''
        ].join(' ').trim()
        publishDir = [
            path: { "${params.outdir}/${meta.id}/kraken2_archaea" },
            mode: 'copy',
            pattern: "*.{txt,gz,fq,fastq}"
        ]
    }

    withName: KRKN_NO_ARCH {
        ext.args = [
            params.use_names ? '-use-names' : '',
            params.report_zero_counts ? '-report-zero-counts' : '',
            params.confidence > 0 ? "-confidence ${params.confidence}" : '',
            params.memmapping ? '--memory-mapping' : ''
        ].join(' ').trim()
        publishDir = [
            path: { "${params.outdir}/${meta.id}/kraken2_sans_archaea" },
            mode: 'copy',
            pattern: "*.{txt,gz,fq,fastq}"
        ]
    }

    withName: CDHIT_CDHIT {
        ext.args = [
            params.percent_seq_id !== 0.9 ? "-c ${params.percent_seq_id}" : '',
            params.word_length !== 10 ? "-n  ${params.word_length}" : ''
        ].join(' ').trim()
        publishDir = [
            path: { "${params.outdir}/${meta.id}/cdhit" },
            mode: 'copy',
            pattern: "*.{fa,fasta,clstr}"
        ]
    }

    withName: 'SALMON_INDEX' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/salmon/index" },
            mode: 'copy',
            pattern: "*"
            // pattern: "*/*.{bin,json,log,tsv}"
        ]
    }

    withName: 'SALMON_QUANT' {
        publishDir = [
            [
                path: { "${params.outdir}/${meta.id}/salmon/quant/results" },
                mode: params.publish_dir_mode
            ],
            [
                path: { "${params.outdir}/${meta.id}/salmon/quant" },
                mode: 'copy',
                pattern: "*info.json"
            ]
        ]
    }

    withName: 'TRANSDECODER_LONGORF' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/transdecoder/longorf" },
            mode: params.publish_dir_mode
        ]
    }

    withName: 'TRANSDECODER_PREDICT' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/transdecoder/predict" },
            mode: 'copy',
            pattern: "*.transdecoder.{pep,cds,gff3,bed}"
        ]
    }

    withName: EGGNOG_MAPPER {
        ext.args = [
            params.annot_sens  !== 'sensitive' ? "--sensmode ${params.annot_sens}" : '',
            params.annot_eval  !== 0.001       ? "--evalue ${params.annot_eval}"    : '',
            params.annot_score                 ? "--score ${params.annot_score}"    : ''
        ].join(' ').trim()
        publishDir = [
            [
                path: { "${params.outdir}/${meta.id}/eggnog" },
                mode: 'copy',
                pattern: "*.emapper.hits"
            ],
            [
                path: { "${params.outdir}/${meta.id}/eggnog" },
                mode: 'copy',
                pattern: "*.emapper.seed_orthologs"
            ],
            [
                path: { "${params.outdir}/${meta.id}/eggnog" },
                mode: 'copy',
                pattern: "*.emapper.annotations"
            ]
        ]
    }

    // assembler QC:
    withName: BT2_TRNS_BLD {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/assembly_qc/${meta.assembler}" },
            mode: params.publish_dir_mode,
            pattern: '*'
        ]
    }
    withName: BT2_TRNS_ALGN {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/assembly_qc/${meta.assembler}" },
            mode: params.publish_dir_mode,
            pattern: '*'
        ]
    }
    withName: PLOT_CONTIGS {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/assembly_qc/${meta.assembler}" },
            mode: params.publish_dir_mode,
            pattern: '*'
        ]
    }
    withName: TRANSRATE {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/assembly_qc/${meta.assembler}" },
            mode: params.publish_dir_mode,
            pattern: '*'
        ]
    }

    withName: UNPIGZ_CONTIGS {
        publishDir = [
            enabled: false
        ]
    }

    withName: SALMON_MERGE {
        publishDir = [
            path: {"${params.outdir}/combined_assembly/salmon"},
            mode: params.publish_dir_mode,
            pattern: '*.sf'
        ]
    }

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }

    withName: CUSTOM_DUMPCOUNTS {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*.csv'
        ]
    }

    withName: COUNTS_PLOT {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*'
        ]
    }
    withName: BT2_LOGS {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*.txt'
        ]
    }
    withName: SMR_LOGS {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*.txt'
        ]
    }
    withName: KR2_LOGS {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*.txt'
        ]
    }

    withName: MULTIQC {
        ext.args = params.multiqc_title ? "--title \"$params.multiqc_title\"" : ''
        publishDir = [
            path: { "${params.outdir}/${meta.id}/multiqc"},
            mode:'copy',
            pattern: '*'
        ]
    }
}
